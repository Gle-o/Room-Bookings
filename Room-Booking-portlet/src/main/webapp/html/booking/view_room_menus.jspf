
<%@page import="com.zenixia.plugins.model.Room"%>
<%@page import="com.liferay.portal.kernel.portlet.LiferayWindowState"%>
<%@page import="com.liferay.portal.util.PortalUtil"%>

<%
String backURL = PortalUtil.getCurrentURL(request);
%>

<aui:script use="liferay-room-simple-menu,liferay-room-simple-color-picker">
	window.<portlet:namespace />roomListsMenu = new Liferay.SimpleMenu(
		{
			align: {
				points: [A.WidgetPositionAlign.TL, A.WidgetPositionAlign.BL]
			},
			constrain: true,
			items: [
				{
					caption: '<liferay-ui:message key="add-room" />',
					fn: function(event) {
						var instance = this;

						var roomResourceId = instance.roomResourceId;

						if (roomResourceId) {
							Liferay.Util.openWindow(
								{
									dialog: {
										after: {
											destroy: function(event) {
												Liferay.RoomUtil.getResourceRooms(
													roomResourceId,
													function(rooms) {
														var roomList = window.<portlet:namespace />roomLists[roomResourceId];

														roomList.set('rooms', rooms);

														<portlet:namespace />syncRoomsMap();

														<portlet:namespace />scheduler.load();
													}
												);
											}
										},
										destroyOnHide: true,
										modal: true
									},
									refreshWindow: window,
									title: '<liferay-ui:message key="add-room" />',

									<portlet:renderURL var="editRoomURL" windowState="<%= LiferayWindowState.POP_UP.toString() %>">
										<portlet:param name="mvcPath" value="/edit_room.jsp" />
										<portlet:param name="roomResourceId" value="{roomResourceId}" />
									</portlet:renderURL>

									uri: A.Lang.sub(
										decodeURIComponent('<%= editRoomURL %>'),
										{
											roomResourceId: roomResourceId
										}
									)
								}
							);
						}
					},
					icon: 'icon-plus',
					id: 'add'
				},
				{
					caption: '<liferay-ui:message key="manage-rooms" />',
					fn: function(event) {
						var instance = this;

						var roomResourceId = instance.roomResourceId;

						if (roomResourceId) {
							<portlet:renderURL var="roomsURL">
								<portlet:param name="mvcPath" value="/view_rooms.jsp" />
								<portlet:param name="redirect" value="<%= currentURL %>" />
								<portlet:param name="roomResourceId" value="{roomResourceId}" />
							</portlet:renderURL>

							window.location.href = A.Lang.sub(
								decodeURIComponent('<%= roomsURL %>'),
								{
									roomResourceId: roomResourceId
								}
							);
						}
					},
					icon: 'icon-room',
					id: 'manage'
				}
			],
			visible: false,
			width: 290,
			zIndex: 500
		}
	).render();

	window.<portlet:namespace />roomsMenu = {
		items: [
			{
				caption: '<liferay-ui:message key="add-room-booking" />',
				fn: function(event) {
					var instance = this;

					var roomList = instance.get('host');

					var activeRoom = roomList.activeItem;

					<portlet:renderURL var="addRoomBookingURL" windowState="<%= LiferayWindowState.POP_UP.toString() %>">
						<portlet:param name="mvcPath" value="/edit_room_booking.jsp" />
						<portlet:param name="backURL" value="<%= backURL %>" />
						<portlet:param name="roomId" value="{roomId}" />
					</portlet:renderURL>

					Liferay.Util.openWindow(
						{
							dialog: {
								after: {
									destroy: function(event) {
										<portlet:namespace />scheduler.load();
									}
								},
								destroyOnHide: true,
								modal: true
							},
							refreshWindow: window,
							title: '<liferay-ui:message key="new-room-booking" />',
							uri: A.Lang.sub(
								decodeURIComponent('<%= addRoomBookingURL %>'),
								{
									roomId: activeRoom.get('roomId')
								}
							)
						}
					);
				},
				icon: 'icon-plus',
				id: 'addEvent'
			},
			{
				caption: '<liferay-ui:message key="hide-room" />',
				fn: function(event) {
					var instance = this;

					var roomList = instance.get('host');

					roomList.remove(roomList.activeItem);

					<portlet:namespace />refreshVisibleRoomRenderingRules();

					instance.set('visible', false);
				},
				icon: 'icon-remove',
				id: 'hide'
			},
			{
				caption: '<liferay-ui:message key="room-settings" />',
				fn: function(event) {
					var instance = this;

					var roomList = instance.get('host');

					var activeRoom = roomList.activeItem;

					Liferay.Util.openWindow(
						{
							dialog: {
								after: {
									destroy: function(event) {
										Liferay.RoomUtil.getResourceRooms(
											activeRoom.get('roomResourceId'),
											function(rooms) {
												roomList.set('rooms', rooms);

												<portlet:namespace />syncRoomsMap();

												<portlet:namespace />scheduler.load();
											}
										);
									}
								},
								destroyOnHide: true,
								modal: true
							},
							refreshWindow: window,
							title: '<liferay-ui:message key="room-settings" />',

							<portlet:renderURL var="editRoomURL" windowState="<%= LiferayWindowState.POP_UP.toString() %>">
								<portlet:param name="mvcPath" value="/edit_room.jsp" />
								<portlet:param name="roomId" value="{roomId}" />
							</portlet:renderURL>

							uri: A.Lang.sub(
								decodeURIComponent('<%= editRoomURL %>'),
								{
									roomId: activeRoom.get('roomId'),
									roomResourceId: activeRoom.get('roomResourceId')
								}
							)
						}
					);
				},
				icon: 'icon-edit',
				id: 'settings'
			},
			{
				caption: '<liferay-ui:message key="permissions" />',
				fn: function(event) {
					var instance = this;

					var roomList = instance.get('host');

					var activeRoom = roomList.activeItem;

					Liferay.Util.openWindow(
						{
							dialog: {
								after: {
									destroy: function(event) {
										<portlet:namespace />scheduler.load();
									}
								},
								destroyOnHide: true,
								modal: true
							},
							refreshWindow: window,
							title: '<liferay-ui:message key="permissions" />',

							<liferay-security:permissionsURL
								modelResource="<%= Room.class.getName() %>"
								modelResourceDescription="{modelResourceDescription}"
								resourceGroupId="{resourceGroupId}"
								resourcePrimKey="{resourcePrimKey}"
								var="permissionsURL"
								windowState="<%= LiferayWindowState.POP_UP.toString() %>"
							/>

							uri: A.Lang.sub(
								decodeURIComponent('<%= permissionsURL %>'),
								{
									resourceGroupId: activeRoom.get('groupId'),
									resourcePrimKey: activeRoom.get('roomId'),
									modelResourceDescription: activeRoom.get('name')
								}
							)
						}
					);
				},
				icon: 'icon-lock',
				id: 'permissions'
			},
			{
				caption: '<liferay-ui:message key="delete" />',
				fn: function(event) {
					var instance = this;

					var roomList = instance.get('host');

					var activeRoom = roomList.activeItem;

					if (confirm('<liferay-ui:message key="are-you-sure-you-want-to-delete-this" />')) {
						Liferay.RoomUtil.deleteRoom(
							activeRoom.get('roomId'),
							function() {
								Liferay.RoomUtil.getResourceRooms(
									activeRoom.get('roomResourceId'),
									function(rooms) {
										roomList.set('rooms', rooms);

										<portlet:namespace />syncRoomsMap();

										<portlet:namespace />scheduler.load();

										Liferay.RoomMessageUtil.showAlert('#<portlet:namespace />alert', '<liferay-ui:message key="the-room-was-deleted-successfully" />');
									}
								);
							}
						);
					}
				},
				icon: 'icon-remove',
				id: 'delete'
			},

			<c:if test="<%= enableRSS %>">
				{
					caption: '<liferay-ui:message key="rss" />',
					cssClass: 'room-subscribe-link',
					fn: function(event) {
						var instance = this;

						var roomList = instance.get('host');

						var activeRoom = roomList.activeItem;

						<liferay-portlet:resourceURL id="roomBookingsRSS" varImpl="roomRSSURL">
							<portlet:param name="roomId" value="{roomId}" />
						</liferay-portlet:resourceURL>

						var url = A.Lang.sub(
							decodeURIComponent('<%= roomRSSURL %>'),
							{
								roomId: activeRoom.get('roomId')
							}
						);

						window.open(url, '_blank');

						instance.set('visible', false);
					},
					icon: 'icon-rss',
					id: 'subscribe'
				},
			</c:if>

			{
				caption: '-',
				id: 'separator1'
			},
			{
				caption: '<div class="room-portlet-color-picker"></div>',
				id: 'colorPicker'
			}
		],
		on: {
			visibleChange: function(event) {
				var instance = this;

				var roomList = instance.get('host');

				var room = roomList.activeItem;

				if (room && event.newVal) {
					var permissions = room.get('permissions');

					var hiddenItems = [];

					if (roomList !== window.<portlet:namespace />otherRoomList) {
						hiddenItems.push('hide');
					}

					var defaultRoom = room.get('defaultRoom');

					if ((permissions.DELETE === false) || (defaultRoom === true)) {
						hiddenItems.push('delete');
					}

					if (permissions.MANAGE_BOOKINGS === false) {
						hiddenItems.push('addEvent');
					}

					if (permissions.PERMISSIONS === false) {
						hiddenItems.push('permissions');
					}

					if (permissions.UPDATE === false) {
						hiddenItems.push('settings');
						hiddenItems.push('separator1');
						hiddenItems.push('colorPicker');
					}

					instance.set('hiddenItems', hiddenItems);

					<portlet:namespace />colorPicker.set('host', instance);

					<portlet:namespace />colorPicker.setAttrs(
						{
							color: room.get('color'),
							visible: true
						}
					);

					var colorPickerContainer = instance.get('boundingBox').one('.room-portlet-color-picker');

					colorPickerContainer.append(window.<portlet:namespace />colorPicker.get('boundingBox'));
				}
			}
		},
		width: 225
	};

	<portlet:namespace />colorPicker = new Liferay.SimpleColorPicker(
		{
			on: {
				colorChange: function(event) {
					var instance = this;

					var simpleMenu = instance.get('host');

					if (simpleMenu) {
						var roomList = simpleMenu.get('host');

						roomList.activeItem.set(
							'color',
							event.newVal,
							{
								silent: true
							}
						);

						simpleMenu.set('visible', false);
					}
				}
			},
			visible: false
		}
	).render();

	A.one('#<portlet:namespace />roomListContainer').delegate(
		'click',
		function(event) {
			var currentTarget = event.currentTarget;

			window.<portlet:namespace />roomListsMenu.setAttrs(
				{
					alignNode: currentTarget,
					visible: !window.<portlet:namespace />roomListsMenu.get('visible')
				}
			);

			window.<portlet:namespace />roomListsMenu.roomResourceId = currentTarget.getAttribute('data-roomResourceId');

			event.stopImmediatePropagation();
		},
		'.room-list-item-arrow'
	);
</aui:script>