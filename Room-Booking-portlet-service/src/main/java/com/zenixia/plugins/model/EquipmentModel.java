package com.zenixia.plugins.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the Equipment service. Represents a row in the &quot;RoomBooking_Equipment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.zenixia.plugins.model.impl.EquipmentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.zenixia.plugins.model.impl.EquipmentImpl}.
 * </p>
 *
 * @author Guillaume Lenoir
 * @see Equipment
 * @see com.zenixia.plugins.model.impl.EquipmentImpl
 * @see com.zenixia.plugins.model.impl.EquipmentModelImpl
 * @generated
 */
public interface EquipmentModel extends BaseModel<Equipment>, StagedGroupedModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a equipment model instance should use the {@link Equipment} interface instead.
     */

    /**
     * Returns the primary key of this equipment.
     *
     * @return the primary key of this equipment
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this equipment.
     *
     * @param primaryKey the primary key of this equipment
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the uuid of this equipment.
     *
     * @return the uuid of this equipment
     */
    @AutoEscape
    @Override
    public String getUuid();

    /**
     * Sets the uuid of this equipment.
     *
     * @param uuid the uuid of this equipment
     */
    @Override
    public void setUuid(String uuid);

    /**
     * Returns the equipment ID of this equipment.
     *
     * @return the equipment ID of this equipment
     */
    public long getEquipmentId();

    /**
     * Sets the equipment ID of this equipment.
     *
     * @param equipmentId the equipment ID of this equipment
     */
    public void setEquipmentId(long equipmentId);

    /**
     * Returns the company ID of this equipment.
     *
     * @return the company ID of this equipment
     */
    @Override
    public long getCompanyId();

    /**
     * Sets the company ID of this equipment.
     *
     * @param companyId the company ID of this equipment
     */
    @Override
    public void setCompanyId(long companyId);

    /**
     * Returns the group ID of this equipment.
     *
     * @return the group ID of this equipment
     */
    @Override
    public long getGroupId();

    /**
     * Sets the group ID of this equipment.
     *
     * @param groupId the group ID of this equipment
     */
    @Override
    public void setGroupId(long groupId);

    /**
     * Returns the user ID of this equipment.
     *
     * @return the user ID of this equipment
     */
    @Override
    public long getUserId();

    /**
     * Sets the user ID of this equipment.
     *
     * @param userId the user ID of this equipment
     */
    @Override
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this equipment.
     *
     * @return the user uuid of this equipment
     * @throws SystemException if a system exception occurred
     */
    @Override
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this equipment.
     *
     * @param userUuid the user uuid of this equipment
     */
    @Override
    public void setUserUuid(String userUuid);

    /**
     * Returns the user name of this equipment.
     *
     * @return the user name of this equipment
     */
    @AutoEscape
    @Override
    public String getUserName();

    /**
     * Sets the user name of this equipment.
     *
     * @param userName the user name of this equipment
     */
    @Override
    public void setUserName(String userName);

    /**
     * Returns the create date of this equipment.
     *
     * @return the create date of this equipment
     */
    @Override
    public Date getCreateDate();

    /**
     * Sets the create date of this equipment.
     *
     * @param createDate the create date of this equipment
     */
    @Override
    public void setCreateDate(Date createDate);

    /**
     * Returns the modified date of this equipment.
     *
     * @return the modified date of this equipment
     */
    @Override
    public Date getModifiedDate();

    /**
     * Sets the modified date of this equipment.
     *
     * @param modifiedDate the modified date of this equipment
     */
    @Override
    public void setModifiedDate(Date modifiedDate);

    /**
     * Returns the name of this equipment.
     *
     * @return the name of this equipment
     */
    public String getName();

    /**
     * Returns the localized name of this equipment in the language. Uses the default language if no localization exists for the requested language.
     *
     * @param locale the locale of the language
     * @return the localized name of this equipment
     */
    @AutoEscape
    public String getName(Locale locale);

    /**
     * Returns the localized name of this equipment in the language, optionally using the default language if no localization exists for the requested language.
     *
     * @param locale the local of the language
     * @param useDefault whether to use the default language if no localization exists for the requested language
     * @return the localized name of this equipment. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
     */
    @AutoEscape
    public String getName(Locale locale, boolean useDefault);

    /**
     * Returns the localized name of this equipment in the language. Uses the default language if no localization exists for the requested language.
     *
     * @param languageId the ID of the language
     * @return the localized name of this equipment
     */
    @AutoEscape
    public String getName(String languageId);

    /**
     * Returns the localized name of this equipment in the language, optionally using the default language if no localization exists for the requested language.
     *
     * @param languageId the ID of the language
     * @param useDefault whether to use the default language if no localization exists for the requested language
     * @return the localized name of this equipment
     */
    @AutoEscape
    public String getName(String languageId, boolean useDefault);

    @AutoEscape
    public String getNameCurrentLanguageId();

    @AutoEscape
    public String getNameCurrentValue();

    /**
     * Returns a map of the locales and localized names of this equipment.
     *
     * @return the locales and localized names of this equipment
     */
    public Map<Locale, String> getNameMap();

    /**
     * Sets the name of this equipment.
     *
     * @param name the name of this equipment
     */
    public void setName(String name);

    /**
     * Sets the localized name of this equipment in the language.
     *
     * @param name the localized name of this equipment
     * @param locale the locale of the language
     */
    public void setName(String name, Locale locale);

    /**
     * Sets the localized name of this equipment in the language, and sets the default locale.
     *
     * @param name the localized name of this equipment
     * @param locale the locale of the language
     * @param defaultLocale the default locale
     */
    public void setName(String name, Locale locale, Locale defaultLocale);

    public void setNameCurrentLanguageId(String languageId);

    /**
     * Sets the localized names of this equipment from the map of locales and localized names.
     *
     * @param nameMap the locales and localized names of this equipment
     */
    public void setNameMap(Map<Locale, String> nameMap);

    /**
     * Sets the localized names of this equipment from the map of locales and localized names, and sets the default locale.
     *
     * @param nameMap the locales and localized names of this equipment
     * @param defaultLocale the default locale
     */
    public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale);

    /**
     * Returns the reference of this equipment.
     *
     * @return the reference of this equipment
     */
    @AutoEscape
    public String getReference();

    /**
     * Sets the reference of this equipment.
     *
     * @param reference the reference of this equipment
     */
    public void setReference(String reference);

    /**
     * Returns the equipment type ID of this equipment.
     *
     * @return the equipment type ID of this equipment
     */
    public long getEquipmentTypeId();

    /**
     * Sets the equipment type ID of this equipment.
     *
     * @param equipmentTypeId the equipment type ID of this equipment
     */
    public void setEquipmentTypeId(long equipmentTypeId);

    /**
     * Returns the room ID of this equipment.
     *
     * @return the room ID of this equipment
     */
    public long getRoomId();

    /**
     * Sets the room ID of this equipment.
     *
     * @param roomId the room ID of this equipment
     */
    public void setRoomId(long roomId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public String[] getAvailableLanguageIds();

    public String getDefaultLanguageId();

    public void prepareLocalizedFieldsForImport() throws LocaleException;

    public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
        throws LocaleException;

    @Override
    public Object clone();

    @Override
    public int compareTo(Equipment equipment);

    @Override
    public int hashCode();

    @Override
    public CacheModel<Equipment> toCacheModel();

    @Override
    public Equipment toEscapedModel();

    @Override
    public Equipment toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
